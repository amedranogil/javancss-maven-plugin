package org.codehaus.mojo.javancss;

import java.io.File;
import java.util.Iterator;
import java.util.List;

import org.apache.maven.plugin.AbstractMojo;
import org.apache.maven.plugin.MojoExecutionException;
import org.apache.maven.plugin.MojoFailureException;
import org.apache.maven.reporting.MavenReportException;
import org.dom4j.Document;
import org.dom4j.Node;

/*
 * Copyright 2004-2005 The Apache Software Foundation.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Fail the build if there were any Method with a ccn greater than a limit in the source code.
 * 
 * @goal check
 * @phase verify
 * @execute goal="report"
 */
public class NcssViolationCheckMojo extends AbstractMojo
{
    /**
     * Specifies the directory where the XML report will be generated.
     * 
     * @parameter default-value="${project.build.directory}"
     * @required
     */
    // FIXME : same variable, same value in NCSSReportMojo...
    private File xmlOutputDirectory;

    /**
     * Whether to fail the build if the validation check fails.
     * 
     * @parameter expression="${ncss.failOnViolation}" default-value="true"
     * @required
     */
    private boolean failOnViolation;

    /**
     * Name of the file holding the xml file generated by JavaNCSS
     * 
     * @parameter default-value="javancss-raw-report.xml"
     * @required
     */
    // FIXME : same variable, same value in NCSSReportMojo...
    private String tempFileName;

    /**
     * CCN Limit, any code with a ccn greater than this number will generate a violation
     * 
     * @parameter default-value="10"
     * @required
     */
    private int ccnLimit;

    /**
     * ncss Limit, any code with a ncss greater than this number will generate a violation
     * 
     * @parameter default-value="100"
     * @required
     */
    private int ncssLimit;

    public void execute() throws MojoExecutionException, MojoFailureException
    {
        int ccnViolation = 0;
        int ncssViolation = 0;
        // FIXME: Building of File is strangely equivalent to method buildOutputFileName of NcssReportGenerator class...
        File ncssXmlFile = new File( xmlOutputDirectory + File.separator + tempFileName );
        try
        {
            Document document = XmlUtil.loadDocument( xmlOutputDirectory );
            List list = document.selectNodes( "//javancss/functions/function" );
            Iterator nodeIterator = list.iterator();
            while ( nodeIterator.hasNext() )
            {
                Node node = ( Node ) nodeIterator.next();
                // count ccn violation
                int ccn = new Integer( node.valueOf( "ccn" ) ).intValue();
                if ( ccn > ccnLimit )
                {
                    ccnViolation++;
                }
                // count ncss violation
                int ncss = new Integer( node.valueOf( "ncss" ) ).intValue();
                if ( ncss > ncssLimit )
                {
                    ncssViolation++;
                }
            }
            // report ccn violation
            if ( ccnViolation > 0 )
            {
                String violationString =
                    "Your code has " + ccnViolation + " method(s) with a cnn greater than " + ccnLimit;
                getLog().info( violationString );
                if ( failOnViolation )
                {
                    throw new MojoFailureException( violationString );
                }
            }
            // report ncss violation
            if ( ncssViolation > 0 )
            {
                String violationString =
                    "Your code has " + ncssViolation + " method(s) with a ncss greater than " + ncssLimit;
                getLog().info( violationString );
                if ( failOnViolation )
                {
                    throw new MojoFailureException( violationString );
                }
            }
        }
        catch ( MavenReportException e )
        {
            new MojoFailureException( "Can't read javancss xml output file : " + ncssXmlFile );
        }
    }
}
